//------------------------------------------------
//--- 010 Editor v7.0.2 Binary Template
//
//      File: MTA
//   Authors: Jam1garner
//   Version: 0.7
//   Purpose: Material Animation in Smash 4
//  Category: Animation
//  ID Bytes: 4D 54 41 34
//------------------------------------------------
BigEndian();
struct FILE{
    struct HEADER{
        char magic[4]; //MTA4
        uint32 unknown;
        uint32 numFrames;
        FSkip(4);
        uint32 numFramesMinusOne;
        uint32 frameRate;
        uint32 matCount;
        uint32 matOffset<format=hex>;
        uint32 visCount;
        uint32 visOffset<format=hex>;
        FSeek(matOffset);
        uint32 matOffsets[matCount]<format=hex>;
        FSeek(visOffset);
        uint32 visOffsets[visCount]<format=hex>;
        
    }header <bgcolor=cLtBlue>;
    
    local int i = 0;
    local int64 returnPos = 0;
    for(i = 0; i < header.matCount; i++ ){
        FSeek(header.matOffsets[i]);
        struct MATENTRY{
            uint32 nameOffset;
            uint32 matHash<format=hex>;
            uint32 materialType; //idek, just a guess
            uint32 materialDPos; //again idek just a guess
            byte hasPAT0;//Some sort of flags?
            FSkip(3);
            uint32 PAT0_Offset;//Seems to be an offset?
            uint32 name2Offset;
            uint32 matHash2;
            FSeek(nameOffset);
            string name;
            if(name2Offset != 0){
                FSeek(name2Offset);
                string name2;
            }
            if(hasPAT0){
                FSeek(PAT0_Offset);
                if(!FEof()){
                    uint32 patDataPos;
                    if(patDataPos!=0){
                        FSeek(patDataPos);
                        struct PATDATA{
                            uint32 defaultTexId<format=hex>;
                            uint32 keyframeCount;
                            uint32 keyframesOffset;
                            uint32 numFramesMinusOne;
                            uint32 unknown;
                            FSeek(keyframesOffset);
                            if(!FEof()){
                                struct MATKEYFRAME{
                                    Printf("Keyframe at %i",FTell());
                                    uint32 texId<format=hex>;
                                    uint32 frame;
                                }keyframes[keyframeCount];
                            }
                        }patData<bgcolor=cYellow>;
                    }
                }
            }
            FSeek(materialDPos);
            if(materialType>0){
                uint32 matDataPos[materialType];
                local int j;
                for(j=0;j<materialType;j++){
                    FSeek(matDataPos[j]);
                    struct MATDATA{
                        uint32 nameOffset;
                        uint32 unknown;//int 
                        uint32 valueCount;//Number of values in a frame
                        uint32 frameCount;//int
                        uint32 unknown;//flags?
                        uint32 dataOffset;
                        FSeek(nameOffset);
                        string name;
                        FSeek(dataOffset);
                        struct MAT1FRAME{
                            float values[valueCount];
                        }frames[frameCount];
                    }matData;
                }
            }
            FSeek(10000000);
        }material <bgcolor=cRed>;
    }
    
    for(i = 0; i < header.visCount; i++ ){
        FSeek(header.visOffsets[i]);
        struct VISENTRY{
            uint32 nameOffset;
            uint32 type;
            uint32 dataOffset;
            FSeek(nameOffset);
            string name;
            FSeek(dataOffset);
            uint32 frameCount;
            uint16 unknown;
            uint16 keyframeCount;
            uint32 keyframeOffset;
            FSeek(keyframeOffset);
            struct VISKEYFRAME{
                uint16 frameNumber;
                ubyte state;
                ubyte unknown;
            }keyframes[keyframeCount];
            FSeek(10000000);
        }visualAnimation <bgcolor=cGreen>;
    }
}file;
